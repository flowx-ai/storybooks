"use strict";(self.webpackChunkflowx_process_renderer_ui=self.webpackChunkflowx_process_renderer_ui||[]).push([[8826],{"./libs/ui-toolkit/angular/src/lib/form-controls/select/multi-select.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MultiSelect:()=>MultiSelect,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var MultiSelectOptionsDisplayModeType,tslib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_common__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_select_module__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./libs/ui-toolkit/angular/src/lib/form-controls/select/select.module.ts"),_icon_icon_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./libs/ui-toolkit/angular/src/lib/icon/icon.module.ts");!function(MultiSelectOptionsDisplayModeType){MultiSelectOptionsDisplayModeType.COMMA_SEPARATED="COMMA_SEPARATED",MultiSelectOptionsDisplayModeType.CHIPS_INSIDE="CHIPS_INSIDE",MultiSelectOptionsDisplayModeType.CHIPS_OUTSIDE="CHIPS_OUTSIDE"}(MultiSelectOptionsDisplayModeType||(MultiSelectOptionsDisplayModeType={}));let MultiSelectContainerComponent=class MultiSelectContainerComponent{constructor(){this.options=[{value:"option1",label:"Option 1"},{value:"option2",label:"Option 2"},{value:"option3",label:"Option 3 - Not so Long"},{value:"option4",label:"Option 4"},{value:"option5",label:"Option 5"},{value:"option6",label:"Option 6 - Long text example with plenty of text for a good test"},{value:"option7",label:"Option 7"},{value:"option8",label:"Option 8"},{value:"option9",label:"Option 9"},{value:"option10",label:"Option 10"},{value:"option11",label:"Option 11 - Another long text example"}],this.filteredOptions=[],this.fc=new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.MJ([this.options[2],this.options[3]])}filter(event){this.filteredOptions=event?this.options.filter((opt=>opt.label.toLowerCase().includes(event.toLocaleLowerCase()))):[...this.options]}onSelectionChange(){}resetOptions(){setTimeout((()=>this.filteredOptions=[...this.options]))}ngOnInit(){setTimeout((()=>{this.filteredOptions=[...this.options]}),200)}ngOnChanges(changes){changes.disabled&&(changes.disabled.currentValue?this.fc.disable():this.fc.enable()),changes.requiredError&&(changes.requiredError.currentValue?this.fc.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__.k0.required):this.fc.removeValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__.k0.required)),this.fc.updateValueAndValidity()}static{this.propDecorators={requiredError:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],disabled:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],fontFamily:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],label:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],placeholder:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],emptyMessage:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],width:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],hasClear:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],hasCustomClearIcon:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],hasCustomDropdownIcon:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],hasPrefixIcon:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],errorMessage:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],helper:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],infoTooltip:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],maxRows:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],maxSelectable:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}],optionsDisplayMode:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_2__.Input}]}}};MultiSelectContainerComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_3__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({selector:"multi-select-container",standalone:!0,imports:[_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule,_angular_forms__WEBPACK_IMPORTED_MODULE_1__.X1,_angular_forms__WEBPACK_IMPORTED_MODULE_1__.YN,_select_module__WEBPACK_IMPORTED_MODULE_5__.V,_icon_icon_module__WEBPACK_IMPORTED_MODULE_6__.m],template:'\n    <div class="story-container">\n      <flx-select\n        [formControl]="fc"\n        [placeholder]="placeholder"\n        [hasClear]="hasClear"\n        [emptyMessage]="emptyMessage"\n        [style.width]="width > 0 ? width + \'px\' : \'100%\'"\n        [style.--flxTheme-select-fontFamily]="fontFamily"\n        [options]="filteredOptions"\n        [multi]="true"\n        [maxRows]="maxRows"\n        [maxSelectable]="maxSelectable"\n        [optionsDisplayMode]="optionsDisplayMode"\n        (filterChange)="filter($event)"\n        (selectionChange)="onSelectionChange()"\n        overlayClass="flx-default-theme"\n      >\n        <flx-label *ngIf="label">\n          {{ label }}\n        </flx-label>\n        <flx-info-helper *ngIf="infoTooltip && helper">\n          {{ helper }}\n        </flx-info-helper>\n        <flx-icon\n          *ngIf="hasCustomClearIcon"\n          name="trash"\n          flxClearIcon\n        ></flx-icon>\n        <flx-icon\n          *ngIf="hasCustomDropdownIcon"\n          name="caret-right"\n          flxDropdownIcon\n        ></flx-icon>\n        <flx-icon\n          *ngIf="hasPrefixIcon"\n          name="plus-circle"\n          flxPrefixIcon\n        ></flx-icon>\n        <flx-error *ngIf="fc.errors">\n          {{ errorMessage }}\n        </flx-error>\n        <flx-helper *ngIf="!infoTooltip && helper && !fc.errors">\n          {{ helper }}\n        </flx-helper>\n      </flx-select>\n\n      <hr />\n      <h3>Selected options:</h3>\n      <pre>{{ fc.value ? (fc.value | json) : \'-\' }}</pre>\n    </div>\n\n    <style>\n      .story-container {\n        padding: 20px;\n      }\n\n      .selected-options {\n        margin-top: 20px;\n        padding: 10px;\n        background-color: #f7f7f7;\n        border-radius: 4px;\n      }\n\n      ul {\n        margin: 0;\n        padding-left: 20px;\n      }\n\n      li {\n        margin-bottom: 5px;\n      }\n    </style>\n  ',host:{"[class]":"'flx-default-theme'"}})],MultiSelectContainerComponent);const __WEBPACK_DEFAULT_EXPORT__={title:"Form Controls/Selection/MultiSelect",component:MultiSelectContainerComponent,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.applicationConfig)({providers:[(0,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.$R)(),(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.importProvidersFrom)(_icon_icon_module__WEBPACK_IMPORTED_MODULE_6__.m)]})],argTypes:{fontFamily:{options:["Open Sans","Source Code Pro","Bitter"],control:{type:"select"}}}},MultiSelect=(args=>({props:args})).bind({});MultiSelect.args={fontFamily:"Open Sans",label:"Multi Select Label",placeholder:"Select options",emptyMessage:"No options available",width:300,hasCustomClearIcon:!1,hasCustomDropdownIcon:!1,disabled:!1,requiredError:!1,errorMessage:"This field is required",helper:"",infoTooltip:!0,maxRows:2,maxSelectable:3,optionsDisplayMode:MultiSelectOptionsDisplayModeType.CHIPS_INSIDE};const __namedExportsOrder=["MultiSelect"];MultiSelect.parameters={...MultiSelect.parameters,docs:{...MultiSelect.parameters?.docs,source:{originalSource:"(args: MultiSelectContainerComponent) => ({\n  props: args\n})",...MultiSelect.parameters?.docs?.source}}}}}]);