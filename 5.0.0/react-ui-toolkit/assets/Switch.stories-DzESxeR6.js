import{j as t}from"./jsx-runtime-DztICxWZ.js";import{r as o}from"./index-Bv9Y92EF.js";import{u as C,F as q,a as E,b as _,C as N,c as T,d as v,e as P,f as V}from"./InfoTooltip-CoD8okQt.js";import{c as F}from"./clsx-B-dksMZM.js";import{F as L}from"./Icon-B96PK6rJ.js";const k="start",c=({name:a,value:e,disabled:r=!1,onChange:n,onBlur:i,switchType:s="toggle",checkboxIcons:l,...h})=>{const[x,p]=o.useState(!1),d=o.useCallback(u=>p(u),[]),f=o.useCallback(u=>{r||n==null||n(u.target.checked||!1)},[r,n]),y=o.useMemo(()=>s==="checkbox",[s]),w=o.useMemo(()=>e?l==null?void 0:l.selected:l==null?void 0:l.unselected,[e,l]);return t.jsxs("div",{className:F(["flx-switch-container",{disabled:r,checked:!!e,empty:!e,focused:x,toggle:!y,checkbox:y}]),children:[t.jsx("input",{...h,checked:e,value:"on",type:"checkbox",name:a,onFocus:()=>d(!0),onBlur:u=>{d(!1),i==null||i(u)},onChange:f}),y?w?t.jsx("div",{className:"flx-checkbox-icon",children:w}):t.jsx("div",{className:"flx-checkbox-icon",children:t.jsx(L,{name:"check"})}):null]})};c.displayName="FlxSwitch";const g=o.forwardRef(({children:a,dataUniqueid:e,dataTestId:r,labelPosition:n=k,className:i},s)=>t.jsx("div",{className:F(["flx-switch",i]),ref:s,"data-uniqueid":e,"data-testid":r,children:t.jsx("label",{className:F({reversed:n==="end"}),children:a})}));g.displayName="FlxSwitchContainer";o.memo(c);try{c.displayName="FlxSwitch",c.__docgenInfo={description:"",displayName:"FlxSwitch",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: boolean) => void) | undefined"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"boolean | undefined"}},errorDisplayType:{defaultValue:null,description:"",name:"errorDisplayType",required:!1,type:{name:"ErrorDisplayType | undefined"}},switchType:{defaultValue:{value:"toggle"},description:"",name:"switchType",required:!1,type:{name:'"checkbox" | "toggle" | undefined'}},checkboxIcons:{defaultValue:null,description:"",name:"checkboxIcons",required:!1,type:{name:"{ selected?: ReactElement<FlxIconProps, string | JSXElementConstructor<any>> | null | undefined; unselected?: ReactElement<FlxIconProps, string | JSXElementConstructor<...>> | null | undefined; } | undefined"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | null | undefined"}}}}}catch{}const D={component:c,title:"Choices",decorators:[a=>{const e=P({mode:"onBlur",defaultValues:{switch:!1}});return t.jsx(V,{...e,children:t.jsx(a,{})})}],argTypes:{labelPosition:{options:["start","end"],control:{type:"radio"}},fontFamily:{options:["Open Sans","Source Code Pro","Bitter"],control:{type:"select"}}},render:function(e){var p;const r=o.useId(),n=`${r}-form-item`,i=`${r}-form-item-description`,s="switch",l=e.requiredError?{required:"This field is required"}:{},{watch:h,control:x}=C();return t.jsxs("div",{style:{fontFamily:e.fontFamily},className:"flx-default-theme",children:[t.jsxs(g,{labelPosition:e.labelPosition,children:[t.jsxs(q,{children:[t.jsx(E,{htmlFor:n,disabled:e.disabled,children:e.label}),e.infoTooltip?t.jsx(_,{children:e.helper}):null]}),t.jsx(N,{control:x,name:s,rules:l,render:({field:d,fieldState:f})=>t.jsxs(t.Fragment,{children:[t.jsx(c,{name:s,disabled:e.disabled,style:{width:e.width?e.width:"auto"},onChange:d.onChange,onBlur:d.onBlur,value:d.value,checked:d.value}),!e.infoTooltip&&!f.error?t.jsx(T,{id:i,children:e.helper}):null,t.jsx(v,{error:f.error})]})})]}),t.jsxs("p",{children:["Value: ",(p=h(s))==null?void 0:p.toString()]})]})},parameters:{design:{type:"figma",url:"https://www.figma.com/file/2n2umsSLJbNigLx43nseml/FlowX-Design-System?node-id=6737-14344"}}},m={args:{disabled:!1,label:"Switch label",helper:"Helper text",infoTooltip:!1,requiredError:!1,labelPosition:"start",width:200}};var b,S,j;m.parameters={...m.parameters,docs:{...(b=m.parameters)==null?void 0:b.docs,source:{originalSource:`{
  args: {
    disabled: false,
    label: 'Switch label',
    helper: 'Helper text',
    infoTooltip: false,
    requiredError: false,
    labelPosition: 'start',
    width: 200
  }
}`,...(j=(S=m.parameters)==null?void 0:S.docs)==null?void 0:j.source}}};const H=["Switch"],X=Object.freeze(Object.defineProperty({__proto__:null,Switch:m,__namedExportsOrder:H,default:D},Symbol.toStringTag,{value:"Module"}));export{X as S,m as a};
